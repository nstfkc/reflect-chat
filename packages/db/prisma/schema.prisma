// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String @id @default(cuid())
  username     String @unique
  profileColor String
  // email     String    @unique
  // password  String
  // role     String

  notifications UserNotifications[]

  Channel   Channel? @relation(fields: [channelId], references: [id])
  channelId String?

  @@index([channelId])
}

model Channel {
  id          String  @id @default(cuid())
  kind        String //Public, Private, Conversation
  createdBy   String // user id
  name        String?
  description String?

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id       String @id @default(cuid())
  kind     String
  filename String
  size     Int
  width    Int    @default(0)
  height   Int    @default(0)
  path     String

  createdAt   DateTime   @default(now())
  MessageV1   MessageV1? @relation(fields: [messageV1Id], references: [id])
  messageV1Id String?

  @@index([messageV1Id])
}

model MessageV1 {
  id String @id @default(cuid())

  text  String  @db.Text
  media Media[]

  senderId   String
  receiverId String?
  channelId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([channelId])
  @@index([senderId])
  @@index([receiverId])
}

model UserNotifications {
  id String @id @default(cuid())

  payload String

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

model InvitationCode {
  id String @id @default(cuid())

  role   String //admin 
  userId String?
}
